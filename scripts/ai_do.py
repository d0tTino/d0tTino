#!/usr/bin/env python3
"""Interactively execute shell commands generated by ``ai_exec.plan``."""

from __future__ import annotations

import argparse
import subprocess
import sys
from pathlib import Path
from typing import List, Optional

from scripts import ai_exec



def main(argv: Optional[List[str]] = None) -> int:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("goal", help="High level description of the task")
    parser.add_argument("--config")
    parser.add_argument(
        "--log",
        type=Path,
        default=Path("ai_do.log"),
        help="Log file path (default: %(default)s)",
    )
    args = parser.parse_args(argv)

    steps = ai_exec.plan(args.goal, config_path=args.config)
    exit_code = 0
    for i, step in enumerate(steps, 1):
        answer = input(f"{i}. {step} [y/N]?").strip().lower()
        if answer != "y":
            continue
        result = subprocess.run(step, shell=True, capture_output=True, text=True)
        with args.log.open("a", encoding="utf-8") as log:
            log.write(f"$ {step}\n")
            if result.stdout:
                log.write(result.stdout)
            if result.stderr:
                log.write(result.stderr)
            log.write(f"(exit {result.returncode})\n\n")
        print(result.stdout, end="")
        if result.stderr:
            print(result.stderr, end="", file=sys.stderr)
        if result.returncode and not exit_code:
            exit_code = result.returncode
    return exit_code


if __name__ == "__main__":
    raise SystemExit(main())
